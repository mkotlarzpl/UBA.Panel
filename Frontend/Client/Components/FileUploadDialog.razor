@inject ISnackbar Snackbar
@inject HttpClient HttpClient
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            Upload file
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudFileUpload T="IBrowserFile" FilesChanged="AddFile">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.CloudUpload"
                           for="@context.Id">
                    Upload File
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Success" OnClick="UploadFile">Upload</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = null!;

    [Parameter] public string ReportId { get; set; } = null!;

    private IBrowserFile? _file = null;
    
    private void AddFile(IBrowserFile file)
    {
        _file = file;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task UploadFile()
    {
        await using var fileStream = _file!.OpenReadStream();

        var multipartContent = new MultipartFormDataContent()
        {
            { new StreamContent(fileStream), "file", _file.Name }
        };
        
        var response = await HttpClient.PutAsync($"/api/Reports/{ReportId}", multipartContent);
        
        if (!response.IsSuccessStatusCode)
        {
            Snackbar.Add(await response.Content.ReadAsStringAsync(), Severity.Error);
            MudDialog.Close(DialogResult.Cancel());
            return;
        }
        
        Snackbar.Add("File uploaded. New items should visible in few minutes", Severity.Success);
        MudDialog.Close(DialogResult.Ok(string.Empty));
    }
}